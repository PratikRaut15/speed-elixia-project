/*
	Name            -   listener_update_device_details
	Description     -
	Parameters      -
	Module          -   Speed
	Sub-Modules     -   Listener 9970
	Sample Call     -   CALL listener_update_device_details(380, 443, 19.078422, 72.899330, 39, 316, 8, 4166, '2.2', '9.99FA', 3546, 'E', 0, 1, 0, 0, 'A', 25, 1, 14, 1094, 32604246, 32604218, 0, 0, 1100, 1250, 1350, 0, 0, 0, '','',2,'2016-09-13 16:19:53', @isUpdated);
						SELECT @isUpdated;
						CALL listener_update_device_details(6287, 7376, 19.078422, 72.899330, 39, 316, 12, 4069, '1.0', '1.8CHKS_4.27', 42759, 'A', 1, 1, 1, 0, 'A', 12, 5, 11, 1, 5127223, 5127223, 1, 55, 2, 0, 0, 0, 0, 0, '','', 352,'2016-09-13 20:19:53', @isUpdated);
						SELECT @isUpdated;
						CALL listener_update_device_details(5574, 6637, 19.234107, 73.033635, 8, 48, 11, 4170, '4.2', 'E10.12', 38813, 'A', 1, 1, 0, 0, 'A', 22, 1, 17, 1240, 563, 7014390, 1, 45, 3, 0, 0, 0, 1, 0, '','', 3,'2016-09-26 11:16:08', @isUpdated);
						SELECT @isUpdated;
						CALL listener_update_device_details('8018','9427','20.225365','73.039038','0','79','6','4080','1.0','4.1CHKS_5.01','3879','E','0','1','1','0','V','18','5','12','1','7947765','7947756','0','0','139','0','0','0','0','0','','','505','2017-10-07 17:02:26', @isUpdated);
						SELECT @isUpdated;
	Created by      -   Mrudang Vora
	Created on      -   13 Sep, 2016
	Change details  -
	1)  Updated by  -   Mrudang Vora
		Updated on  -   27 Sep, 2016
		Reason      -   Fixed stoppage odometer bug by removing UNSIGNED from odometer and stoppage odometer params
	2)  Updated by  -   Mrudang Vora
		Updated on  -   14 Feb, 2017
		Reason      -   Added the check for fuel for customer and updated fuel balance in vehicle table
	3)  Updated by  -   Mrudang Vora
		Updated on  -   27 Feb, 2017
		Reason      -   Updated fuel calculation formula to use on newly added fuelMaxVoltCapacity in vehicle table
	4)  Updated by  -   Mrudang Vora
		Updated on  -   20 May, 2017
		Reason      -   Added check for gpsfixed param
	5)  Updated by  -   Mrudang Vora
		Updated on  -   08 Oct, 2017
		Reason      -   Fuel Balance Changes
	6)  Updated by  -   Mrudang Vora
		Updated on  -   08 Oct, 2017
		Reason      -   Do not update old fuel balance from this SP as it would be done by cronFuelAlert in stable condition.
	7) 	Updated by  -   Mrudang Vora
		Updated on  -   30 Apr, 2019
		Reason      -   Added double genset (gensetExtraDigitalIOVar) changes for Royal.
*/
DELIMITER $$
DROP PROCEDURE IF EXISTS `listener_update_device_details`$$
CREATE PROCEDURE `listener_update_device_details`(
	 IN uidParam INT
	, IN vehicleidParam INT
	, IN devicelatParam DECIMAL(9,6)
	, IN devicelngParam DECIMAL(9,6)
	, IN altitudeParam INT UNSIGNED
	, IN dirChangeParam INT UNSIGNED
	, IN satvParam TINYINT UNSIGNED
	, IN inbattParam INT UNSIGNED
	, IN hwvParam VARCHAR(5)
	, IN swvParam VARCHAR(15)
	, IN msgidParam INT UNSIGNED
	, IN statusParam VARCHAR(2)
	, IN ignitionParam TINYINT(1)
	, IN powercutParam TINYINT(1)
	, IN tamperParam TINYINT(1) UNSIGNED
	, IN onoffParam TINYINT(1) UNSIGNED
	, IN gpsfixedParam VARCHAR(2)
	, IN gsmstrengthParam TINYINT UNSIGNED
	, IN gsmregisterParam TINYINT(1) UNSIGNED
	, IN gprsregisterParam TINYINT(1) UNSIGNED
	, IN extbattParam INT UNSIGNED
	, IN odometerParam BIGINT
	, IN stoppageodometerParam BIGINT
	, IN stoppageflagParam TINYINT(1) UNSIGNED
	, IN curspeedParam TINYINT UNSIGNED
	, IN analog1Param INT
	, IN analog2Param INT
	, IN analog3Param INT
	, IN analog4Param INT
	, IN digitalioParam SMALLINT
	, IN commandkeyParam TINYINT UNSIGNED
	, IN commandkeyvalParam VARCHAR(30)
	, IN alterremarkParam TEXT
	, IN custnoParam INT
	, IN todaysdate DATETIME
	, OUT isUpdated TINYINT(1)
)
BEGIN
	DECLARE useFuelSensorVar, fuelsensorVar, isDoorExtVar, doorDigitalIOVar, isGensetExtVar, gensetExtraDigitalIOVar TINYINT(1);
	DECLARE fuelBalanceVar, oldFuelBalanceVar, fuelMinVoltVar, fuelMaxVoltVar DECIMAL(6,2);
	DECLARE fuelMaxVoltCapacityVar, fuelPrevAnalogValue, fuelAnalogValue INT;
	DECLARE fuelAnalogColumnVar VARCHAR(20);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		/*
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE,
		@errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		SELECT @full_error;
		*/
		SET isUpdated = 0;
	END;

	IF onoffParam = 1 and (custnoParam = 69 or custnoParam = 73 or custnoParam = 81  or custnoParam = 682) THEN
		BEGIN
			INSERT INTO chk_offline(customerno,lastupdated,vehicleid,latitude,longitude)
			VALUES  (custnoParam,todaysdate,vehicleidParam, devicelatParam,devicelngParam);
		END;
	END IF;

	SELECT  use_fuel_sensor
	INTO    useFuelSensorVar
	FROM    customer
	WHERE   customerno = custnoParam
	LIMIT 1;

	SELECT 	isDoorExt, isGensetExt
	INTO	isDoorExtVar, isGensetExtVar
	FROM 	unit
	WHERE	uid = uidParam
	LIMIT	1;

	/* Assuming default door is closed for doorDigital value 0 */
	SET doorDigitalIOVar = 0;
	IF isDoorExtVar = 1 THEN
		IF FLOOR(extbattParam / 100) = 0 THEN
			/*
				4 digit value - door close , 2 digit value - door open.
				Hence, int division would be 0 in case door is open.
			*/
			SET doorDigitalIOVar = 1;
		END IF;
	END IF;

	/* Assuming default genset is off for extra_digital value 0 */
	SET gensetExtraDigitalIOVar = 0;
	IF isGensetExtVar = 1 THEN
		IF FLOOR(analog1Param / 100) > 0 THEN
			/*
				4 digit value - genset on , 2 digit value - genset off.
				Hence, int division would be 0 in case genset is off.
			*/
			SET gensetExtraDigitalIOVar = 1;
		END IF;
	END IF;

	START TRANSACTION;
		SET fuelBalanceVar = 0;
		IF useFuelSensorVar = 1 THEN
		BEGIN
			SELECT  fuelsensor, fuelMaxVoltCapacity, fuel_min_volt, fuel_max_volt, old_fuel_balance
			INTO    fuelsensorVar, fuelMaxVoltCapacityVar, fuelMinVoltVar, fuelMaxVoltVar, oldFuelBalanceVar
			FROM    unit u
			INNER JOIN vehicle v ON u.uid = v.uid
			WHERE   u.uid = uidParam
			AND     u.customerno = custnoParam
			AND     v.customerno = custnoParam
			LIMIT 1;
			/*SELECT fuelsensorVar, fuelMaxVoltCapacityVar, fuelMinVoltVar, fuelMaxVoltVar, oldFuelBalanceVar;*/
			IF fuelsensorVar IS NOT NULL AND fuelsensorVar >= 1 AND fuelsensorVar <= 4 THEN
				/*
				SET @fuelPrevAnalogValue = '';
				SET fuelAnalogColumnVar = CONCAT('analog', fuelsensorVar);
				SET @sqlQuery = CONCAT('SELECT ', fuelAnalogColumnVar, ' INTO @fuelPrevAnalogValue FROM unit WHERE uid = ', uidParam);
				PREPARE stmt FROM @sqlQuery;
				EXECUTE stmt;
				DEALLOCATE PREPARE stmt;
				SET fuelPrevAnalogValue = @fuelPrevAnalogValue;
				*/
				IF fuelsensorVar = 1 THEN
					SET fuelAnalogValue = analog1Param;
				ELSEIF fuelsensorVar = 2 THEN
					SET fuelAnalogValue = analog2Param;
				ELSEIF fuelsensorVar = 3 THEN
					SET fuelAnalogValue = analog3Param;
				ELSEIF fuelsensorVar = 4 THEN
					SET fuelAnalogValue = analog4Param;
				END IF;
				IF  fuelMaxVoltCapacityVar IS NOT NULL AND fuelMinVoltVar IS NOT NULL AND fuelMaxVoltVar IS NOT NULL
					AND fuelMinVoltVar > 0 AND fuelMaxVoltVar > 0 AND fuelMinVoltVar != fuelMaxVoltVar THEN
					BEGIN
						DECLARE floorNValue INT;
						DECLARE voltageValue, floorFuelVoltageValue, voltageNthPart DECIMAL(6,2);
						DECLARE fuelInaccuracyPercentVar TINYINT;

						SET voltageValue = fuelAnalogValue / 100;
						IF voltageValue >= fuelMaxVoltVar THEN
							SET voltageValue = fuelMaxVoltVar;
						ELSEIF voltageValue <= fuelMinVoltVar THEN
							SET voltageValue = fuelMinVoltVar;
						END IF;

						SET fuelInaccuracyPercentVar = 2;
						SET voltageNthPart = TRUNCATE((fuelMaxVoltVar - fuelMinVoltVar) / (100 / fuelInaccuracyPercentVar), 2);
						SET floorNValue = FLOOR((voltageValue - fuelMinVoltVar) / voltageNthPart);
						SET floorFuelVoltageValue = (floorNValue * voltageNthPart) + fuelMinVoltVar;
						SET fuelBalanceVar = (fuelMaxVoltCapacityVar / (fuelMaxVoltVar - fuelMinVoltVar)) * (floorFuelVoltageValue - fuelMinVoltVar);
						/*SELECT fuelAnalogValue, voltageNthPart, floorNValue,floorFuelVoltageValue,fuelBalanceVar;*/
					END;
				END IF;

			END IF;
		END;
		END IF;

		IF gpsfixedParam = 'A' THEN
			BEGIN
				UPDATE  devices
				SET     devicelat = devicelatParam
						,devicelong = devicelngParam
						,altitude = altitudeParam
						,directionchange = dirChangeParam
				WHERE   uid = uidParam;

				UPDATE  vehicle
				SET     nodata_alert = 0
						,extbatt = extbattParam
						,odometer = odometerParam
						,curspeed = curspeedParam
						,fuel_balance = fuelBalanceVar
				WHERE   uid = uidParam;
			END;
		END IF;

		UPDATE  devices
		SET     satv = satvParam
				,inbatt = inbattParam
				,hwv = hwvParam
				,swv = swvParam
				,msgid = msgidParam
				,`status` = statusParam
				,ignition = ignitionParam
				,powercut = powercutParam
				,tamper = tamperParam
				,`online/offline`= onoffParam
				, gpsfixed = gpsfixedParam
				, gsmstrength = gsmstrengthParam
				, gsmregister = gsmregisterParam
				, gprsregister = gprsregisterParam
				, lastupdated = todaysDate
		WHERE   uid = uidParam;

		UPDATE  vehicle
		SET     lastupdated = todaysdate
				,fuel_balance = fuelBalanceVar
		WHERE   uid = uidParam;

		UPDATE  unit
		SET     analog1 = analog1Param
				,analog2 = analog2Param
				,analog3 = analog3Param
				,analog4 = analog4Param
				,digitalio = digitalioParam
				,door_digitalio = doorDigitalIOVar
				,commandkey = commandkeyParam
				,commandkeyval = commandkeyvalParam
				,remark = 0
				,alterremark = alterremarkParam
				,issue_type = 0
		WHERE   uid = uidParam;

		IF gpsfixedParam = 'A' THEN
		BEGIN
			IF (odometerParam - stoppageodometerParam > 50 ) and stoppageflagParam = 0 and ignitionParam = 1 THEN
				BEGIN
					UPDATE  vehicle
					SET     stoppage_flag = 1
							,stoppage_odometer = odometerParam
							,stoppage_transit_time = todaysDate
					WHERE   uid = uidParam;
					
					UPDATE  stoppage_alerts
					SET     alert_sent = 0
					WHERE   vehicleid = vehicleidParam
					AND     customerno = custnoParam;
					
				END;
			END IF;

			IF  ( (odometerParam - stoppageodometerParam < 50 ) and stoppageflagParam = 1) OR (ignitionParam = 0 AND stoppageflagParam = 1) THEN
				BEGIN
					UPDATE  vehicle
					SET     stoppage_flag = 0
							,stoppage_odometer = odometerParam
							,stoppage_transit_time = todaysDate
					WHERE   uid = uidParam;
				END;
			END IF;

			IF (odometerParam - stoppageodometerParam > 50 ) and stoppageflagParam = 1 and ignitionParam = 1 THEN
				BEGIN
					UPDATE  vehicle
					SET     stoppage_odometer = odometerParam
					WHERE   uid = uidParam;
				END;
			END IF;

			IF (odometerParam < stoppageodometerParam) THEN
				BEGIN
					UPDATE  vehicle
					SET     stoppage_odometer = odometerParam
							,stoppage_transit_time = todaysDate
					WHERE   uid = uidParam;
				END;
			END IF;
		END;
		END IF;
		SET isUpdated = 1;
	COMMIT;
END$$
DELIMITER ;
#CALL listener_update_device_details('8018','9427','20.225365','73.039038','55','79','8','4080','1.0','4.1CHKS_5.01','3883','E','0','1','1','0','A','17','5','12','1','7947765','7947756','0','0','314','0','0','0','0','0','','','505','2017-10-07 17:04:25', @isUpdated);
CALL listener_update_device_details('8573','10020','19.205238','72.834463','23','16','8','4146','1.0','4.1CHKS_5.01','1840','E','0','1','1','0','A','31','1','12','1','62313','62313','0','0','258','0','0','0','0','0','','','527','2017-10-07 17:02:00', @isUpdated);
SELECT @isUpdated;