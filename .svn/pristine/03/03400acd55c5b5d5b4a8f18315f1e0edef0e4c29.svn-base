<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);

include_once "session.php";
include_once "db.php";
include_once "../../lib/system/utilities.php";
include_once "loginorelse.php";
include_once "../../constants/constants.php";
include_once "../../lib/bo/TeamManager.php";
include_once "../../lib/bo/pipelineManager.php";
include_once "../../lib/system/Sanitise.php";
include_once "../../lib/system/class.phpmailer.php";

	$tm = new TeamManager();
	$pm = new pipelineManager();

	$todaysdate = date('Y-m-d H:i:s');

	if(isset($_POST['insert_customer'])){

		$customerObj = new stdClass();

    	$customerObj->teamid = GetSafeValueString(GetLoggedInUserId(), "long");

    	if(isset($_POST['pipelineId'])){

    		$sales_pipeline_contactDetails = $tm->getSalesPipelineContact($_POST['contactid']);
			$customerObj->custcompany = GetSafeValueString($_POST["companyname"], "string");
			$customerObj->primaryusername = GetSafeValueString($sales_pipeline_contactDetails['name'], "string");
			$customerObj->primaryphone = GetSafeValueString($sales_pipeline_contactDetails['phone'], "string");
			$customerObj->primaryuserlogin = GetSafeValueString($sales_pipeline_contactDetails['email'], "string");
			$customerObj->commercial_details= GetSafeValueString($_POST["commercial_details"], "string");

			$customerObj->primaryuserpassword = generate_random_password();

			$customerObj->ctraking=0;
	    	if(isset($_POST['checkbox_Elixia_Speed'])){
	    		$customerObj->ctraking=1;
	    	}
	    	$customerObj->ctrace=0;
	    	if(isset($_POST['checkbox_Elixia_Trace'])){
	    		$customerObj->ctrace=1;
	    	}

	    	$customerObj->cradar=0;
	    	if(isset($_POST['checkbox_Elixia_Radar'])){
	    		$customerObj->cradar=1;
	    	}

	    	$customerObj->cmaintenance=0;
	    	$customerObj->cheirarchy=0;

	    	if(isset($_POST['checkbox_Elixia_Fleet'])){
	    		$customerObj->cmaintenance=1;
	    		$customerObj->cheirarchy=1;
	    	}

	    	$customerObj->csalesengage=0;
	    	if(isset($_POST['checkbox_Elixia_Sales'])){
	    		$customerObj->csalesengage=1;
	    	}
	    	$customerObj->cbooks=0;
	    	if(isset($_POST['checkbox_Elixia_Books'])){
	    		$customerObj->cbooks=1;
	    	}
	    	$customerObj->cerp=0;
	    	if(isset($_POST['checkbox_Elixia_Trip'])|| isset($_POST['checkbox_Elixia_ERP'])){
	    		$customerObj->cerp=1;
	    	}
	    	$customerObj->cwarehouse=0;
	    	if(isset($_POST['checkbox_Elixia_Monitor'])){
	    		$customerObj->cwarehouse=1;
	    	}

	    	$customerObj->cct=0;
	    	if(isset($_POST['checkbox_Elixia_Control_Tower'])){
	    		$customerObj->cct=1;
	    	}

	    	$customerObj->ccrm=0;
	    	if(isset($_POST['checkbox_Elixia_CRM'])){
	    		$customerObj->ccrm=1;
	    	}

	    	$customerObj->timezone = 0;
    	}
	    else{
	    	$customerObj->custcompany = GetSafeValueString(isset($_POST["ccompany"]) ? $_POST["ccompany"]:"", "string");
			$customerObj->primaryusername = GetSafeValueString(isset($_POST["cprimaryname"]) ? $_POST["cprimaryname"] : "", "string");
			$customerObj->primaryphone = GetSafeValueString(isset($_POST["cprimaryphone"]) ? $_POST["cprimaryphone"] : "", "string");
			$customerObj->primaryuserlogin = GetSafeValueString(isset($_POST["cprimaryusername"]) ? $_POST["cprimaryusername"] : "", "string");
			$customerObj->primaryuserpassword = GetSafeValueString(isset($_POST["cprimarypassword"]) ? $_POST["cprimarypassword"] : "", "string");

			$customerObj->timezone = GetSafeValueString(isset($_POST["timezone"]) ? $_POST["timezone"] : "", "string");

		    //Use Ttracking
		    $customerObj->ctraking = 0;
		    if (isset($_POST['ctracking'])) {
		        $customerObj->ctraking = 1;
		    }

		    // Use Maintenance
		    $customerObj->cmaintenance = 1;
		    if (!isset($_POST["cmaintenance"])) {
		        $customerObj->cmaintenance = 0;
		    }

		    // Use Heirarchy
		    $customerObj->cheirarchy = 1;
		    if (!isset($_POST["cheirarchy"])) {
		        $customerObj->cheirarchy = 0;
		    } else if ($cmaintenance == 0) {
		        $customerObj->cheirarchy = 0;
		    }

		    //Use ERP
		    $customerObj->cerp = 0;
		    if (isset($_POST['cerp'])) {
		        $customerObj->cerp = 1;
		    }

		    //Use Warehouse
		    $customerObj->cwarehouse = 0;
		    if (isset($_POST['cwarehouse'])) {
		        $customerObj->cwarehouse = 1;
		    }

		    $customerObj->ctrace = 0;
		    if (isset($_POST['ctrace'])) {
		        $customerObj->ctrace = 1;
		    }
		    
		    $customerObj->cradar = 0;
		    if(isset($_POST['cradar'])){
		    	$customerObj->cradar = 1;
		     
		    }
		    // Use Sales engage
		    $customerObj->csalesengage = 1;
		    if (!isset($_POST["csalesengage"])) {
		        $customerObj->csalesengage = 0;
		    }

		    //USE BOOKS
		    $customerObj->cbooks=0;
	    	if(isset($_POST['cbooks'])){
	    		$customerObj->cbooks=1;
	    	}

		    $customerObj->cct=0;
	    	if(isset($_POST['cct'])){
	    		$customerObj->cct=1;
	    	}

	    	$customerObj->ccrm=0;
	    	if(isset($_POST['ccrm'])){
	    		$customerObj->ccrm=1;
	    	}
		}


		//Below fields are not present in sales pipeline module.


			$customerObj->advanced_alert = GetSafeValueString(isset($_POST["advancedAlerts"]) ? $_POST["advancedAlerts"]:0, "long");

			$customerObj->custsms = 0;
		    if(isset($_POST['csmspack']) && $_POST['csmspack']>0){
		   		$customerObj->custsms=GetSafeValueString(isset($_POST["csmspack"]) ? $_POST["csmspack"] :0 , "long");
		    }

		    $customerObj->custtelephonicalert=0;
		    if(isset($_POST['ctelephonepack']) && $_POST['ctelephonepack']>0){
		   		$customerObj->custtelephonicalert = GetSafeValueString(isset($_POST["ctelephonepack"]) ? $_POST["ctelephonepack"]:0, "long");
		    }



		    // Use Geo Location
		    $customerObj->cgeolocation = 1;
		    if (!isset($_POST["cgeolocation"])) {
		        $customerObj->cgeolocation = 0;
		    }

					    // Use Loading
		    $customerObj->cloading = 1;
		    if (!isset($_POST["cloading"])) {
		        $customerObj->cloading = 0;
		    }

		    // Use AC
		    $customerObj->cac = 1;
		    if (!isset($_POST["cac"])) {
		        $customerObj->cac = 0;
		    }

		    // Use Genset
		    $customerObj->cgenset = 1;
		    if (!isset($_POST["cgenset"])) {
		        $customerObj->cgenset = 0;
		    }

		    // Use Fuel
		    $customerObj->cfuel = 1;
		    if (!isset($_POST["cfuel"])) {
		        $customerObj->cfuel = 0;
		    }

		    // Use Door
		    $customerObj->cdoor = 1;
		    if (!isset($_POST["cdoor"])) {
		        $customerObj->cdoor = 0;
		    }

		    // Use Panic
		    $customerObj->cpanic = 1;
		    if (!isset($_POST["cpanic"])) {
		        $customerObj->cpanic = 0;
		    }

		    // Use Buzzer
		    $customerObj->cbuzzer = 1;
		    if (!isset($_POST["cbuzzer"])) {
		        $customerObj->cbuzzer = 0;
		    }

		    // Use Immobilizer
		    $customerObj->cimmo = 1;
		    if (!isset($_POST["cimmobilizer"])) {
		        $customerObj->cimmo = 0;
		    }

		    // Use mobility
		    $customerObj->cimob = 1;
		    if (!isset($_POST["cimobility"])) {
		        $customerObj->cimob = 0;
		    }



		    // Use Delivery
		    $customerObj->cdelivery = 1;
		    if (!isset($_POST["cdelivery"])) {
		        $customerObj->cdelivery = 0;
		    }

		    // Use Routing
		    $customerObj->crouting = 1;
		    if (!isset($_POST["crouting"])) {
		        $customerObj->crouting = 0;
		    }

		    // Use Portable
		    $customerObj->cportable = 1;
		    if (!isset($_POST["cportable"])) {
		        $customerObj->cportable = 0;
		    }
			 // Temperature Sensors
		$customerObj->ctempsensor = GetSafeValueString(isset($_POST["ctempsensor"]) ? $_POST["ctempsensor"] : 0, "long");

		$customerObj->commercial_details =GetSafeValueString(isset($_POST["commercial_details"]) ? $_POST["commercial_details"] : " ", "string");

    	$new_customer = $tm->insert_customer($customerObj);

    	if(isset($_POST['pipelineId']) && $new_customer>0){
    		$pipelineObj= new stdClass();
    		$pipelineObj->contactId = $_POST['contactid'];
    		$pipelineObj->customerNo= $new_customer;
    		$pipelineObj->pipeLineId = $_POST['pipelineId'];
    		$result = $pm->updatePipeline_Customer($pipelineObj);
    	}

    	if($new_customer > 0){
	    	$contactPersonObj = new stdClass();
	    	$contactPersonObj->userName = $customerObj->primaryusername;
	    	$contactPersonObj->email = $customerObj->primaryuserlogin;
	    	$contactPersonObj->phone = $customerObj->primaryphone;
	    	$contactPersonObj->customerno =$new_customer;
	    	$contact_person = $tm->insert_contactPerson_details($contactPersonObj);


			$relativepath = "../..";
			if (!is_dir($relativepath . '/customer/' . $new_customer)) {
			// Directory doesn't exist.
			mkdir($relativepath . '/customer/' . $new_customer, 0777, true) or die("Could not create directory");
			}
			if (!is_dir($relativepath . '/customer/' . $new_customer . '/unitno')) {
			// Directory doesn't exist.
			mkdir($relativepath . '/customer/' . $new_customer . '/unitno', 0777, true) or die("Could not create directory");
			}
			if (!is_dir($relativepath . '/customer/' . $new_customer . '/reports')) {
			// Directory doesn't exist.
			mkdir($relativepath . '/customer/' . $new_customer . '/reports', 0777, true) or die("Could not create directory");
			}


			// CREATING USER IN SPEED AND ELIXIATECH
			if($customerObj->ctraking==1){
				$userkey1 = generate_random_userkey();//For customer

				$userkey2 = generate_random_userkey();//For Elixir

				$userObj = new stdClass();

				$userObj->customerno  = $new_customer;
				$userObj->userName    = $customerObj->primaryusername;
	    		$userObj->email       = $customerObj->primaryuserlogin;
	    		$userObj->password    = $customerObj->primaryuserpassword;
				$userObj->userkey1    = $userkey1;
				$userObj->userkey2    = $userkey2;
				$userObj->tracking    = $customerObj->ctraking;
				$userObj->maintenance = $customerObj->cmaintenance;
				$userObj->hierarchy   = $customerObj->cheirarchy;
				$userObj->trace       = $customerObj->ctrace;
				$userObj->moduleId    = 2;
				$new_user = $tm->insert_user($userObj);


				$arrTo = array($customerObj->primaryuserlogin);
				$strCCMailIds = "support@elixiatech.com";
				$strBCCMailIds = "sanketsheth@elixiatech.com";
				$subject = "Welcome To Elixia Family";
				$message = file_get_contents('../emailtemplates/teamCreateCustomer.html');
				$message = str_replace("{{CUSTOMERNAME}}",$customerObj->primaryusername, $message);
				$message = str_replace("{{USERNAME}}", $customerObj->primaryuserlogin, $message);
				$message = str_replace("{{PASSWORD}}", $customerObj->primaryuserpassword, $message);
				$attachmentFilePath = "";
				$attachmentFileName = "";
				$isTemplatedMessage = 1;

				sendMailUtil($arrTo, $strCCMailIds, $strBCCMailIds, $subject, $message, $attachmentFilePath, $attachmentFileName, $isTemplatedMessage);
			}

			$customerObj->customerno = $new_customer; // Set New CustomerNo created in a Object.


			 //CURL REQUEST TO CREATE CUSTOMER ACROSS DIFFERENT SERVERS (DIFFERENT PRODUCTS).
			$server_URLs = array();
			$server_URLs = $tm->fetch_insertCustomer_URL();

				$ch = curl_init();
                $objCN = json_encode($customerObj);

                $post_data = array(
                	'action'  => 'insert_customer',
                    'jsonreq' => $objCN,
                );
            $response = array ();
           	foreach($server_URLs as $URL){
                curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0");
                curl_setopt($ch, CURLOPT_URL, $URL['url_path']);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // return into a variable
                curl_setopt($ch, CURLOPT_TIMEOUT, speedConstants::REQUEST_TIMEOUT);
                curl_setopt($ch, CURLOPT_POST, 1);
                curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($post_data));
                $response[] = curl_exec($ch);
                if (curl_error($ch)) {
                    echo 'error:' . curl_error($ch);
                }

            }
			curl_close($ch);
			foreach($response as $val){
				if($val=="0"){
					$final_response =0;
				}else{
					$final_response =1;
				}
			}

			echo json_encode($final_response);
    	}
	    else{
	    	return false;
	    }
	}

	if(isset($_POST['fetch_login_history'])){
		global $tm;
		$loginHistoryObj = new stdClass();
		$loginHistoryObj->customer_no = $_POST['customerno'];
		$loginHistoryObj->date = date("Y-m-d",strtotime($_POST['date']));
		$login_history_array = $tm->get_login_history($loginHistoryObj);

		echo json_encode($login_history_array);
	}
	if(isset($_POST['fetch_login_trend'])){
		global $tm;
		$customerNo = $_POST['customerno'];
		$loginTrend = $tm->get_login_trends($customerNo);
		echo json_encode($loginTrend);
	}
	if(isset($_POST['insert_team_member'])){
		global $tm;
		$teamMember = new stdClass();
		$teamMember->name=$_POST['tname'];
		$teamMember->phone=$_POST['tphone'];
		$teamMember->email=$_POST['temail'];
		$teamMember->role=$_POST['role'];
		$teamMember->department=$_POST['departmentId'];
		$teamMember->company_role=$_POST['company_role'];
		$teamMember->membertype=$_POST['membertype'];
		$teamMember->login=$_POST['tlogin'];
		$teamMember->password=$_POST['tpassword'];
		$teamId = $tm->insertTeamMember($teamMember);
		echo json_encode($teamId);
	}

	if(isset($_POST['get_team_members'])){
		global $tm;
		$teamId    = isset($_POST['team_id'])? $_POST['team_id']:"";
		$teamArray = $tm->fetch_team_list($teamId);
		echo json_encode($teamArray);
	}
	if(isset($_POST['get_department'])){
		global $tm;
		$arrResult=$tm->getDepartment();
		echo json_encode($arrResult);
	}

	if(isset($_POST['update_team_member'])){
		global $tm;
		$teamMember = new stdClass();
		$teamMember->teamid=$_POST['team_id'];
		$teamMember->name=$_POST['tname'];
		$teamMember->phone=$_POST['tphone'];
		$teamMember->email=$_POST['temail'];
		$teamMember->role=$_POST['role'];
		$teamMember->department=$_POST['departmentId'];
		$teamMember->company_role=$_POST['company_role'];
		$teamMember->membertype=$_POST['membertype'];
		$teamId = $tm->updateTeamMember($teamMember);
		echo json_encode($teamId);
	}

	if(isset($_POST['update_team_settings'])){
		global $tm;
		$teamMember 			=	new stdClass();
		$teamMember->teamid 	=	$_POST['team_id'];
		$teamMember->loginId 	=	$_POST['tlogin'];
		$teamMember->password 	=	isset($_POST['tpassword'])? $_POST['tpassword']:"";
		$teamId = $tm->update_teamAccount_settings($teamMember);
		echo json_encode($teamId);
	}

	if(isset($_POST['get_busy_status'])){
		global $tm;
		$teamid = $_POST['team_id'];
		$arrResult=$tm->getBusyStatus($teamid);
		echo json_encode($arrResult);
	}
	if(isset($_POST['insert_attendance_status'])){
		global $tm;

		$attendanceObj = new stdClass();
		$lat 		= 	$_POST['lat'];
		$lng 		= 	$_POST['lng'];
		$attendanceObj->location=getAddress($lat,$lng);
		$attendanceObj->teamId 	= 	$_POST['team_Id'];
		$attendanceObj->check_value =  	$_POST['statusType'];
		$arrResult	=	$tm->insertTeamAttendance($attendanceObj);
		$finalResult = 0;

		if ($arrResult==1 && $attendanceObj->check_value==1) {
			$finalResult = 1;
		}
		else if ($arrResult==1 && $attendanceObj->check_value==3) {
			$finalResult = 2;
		}
		echo json_encode($finalResult);
	}

	if(isset($_POST['fetch_elixiaTeamMembers'])){
		global $tm;

		$teamMemberArray = array();
  		$officeId = $_POST['office_Id'];
  		$teamMemberArray = $tm->fetchElixiaOfficeMembers($officeId);
		echo json_encode($teamMemberArray);
	}

	if(isset($_POST['fetch_attendance_logs'])){
		global $tm;

		$teamMemberArray = array();
  		$date = date("Y-m-d",strtotime($_POST['date']));
  		$AttedanceArray = $tm->fetchTeamAttendanceLogs($date);
		echo json_encode($AttedanceArray);
	}

	function generate_random_userkey(){
		global $tm;
		$userkey=mt_rand();
		$userkey_check = $tm->check_unique_userkey($userkey);

		if($userkey_check){
        	generate_random_userkey();
        }
        else{
        	return $userkey;
        }
	}

	function generate_random_password(){
		global $tm;

		$chars =  'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.'0123456789_.'.'abcdefghijklmnopqrstuvwxyz';

		$length = 6;

		$str = '';
		$max = strlen($chars) - 1;

		for ($i=0; $i < $length; $i++)
		$str .= $chars[mt_rand(0, $max)];

		return $str;
	}

	function generate_random_userkey_trace(){
		global $tm;
		$userkey=mt_rand();
		$userkey_check = $tm->check_unique_userkey_trace($userkey);

		if($userkey_check){
        	generate_random_userkey_trace();
        }
        else{
        	return $userkey;
        }
	}

	function getAddress($latitude,$longitude){
	    if(!empty($latitude) && !empty($longitude)){
	        $API = signLocationUrl("http://maps.google.com/maps/api/geocode/json?latlng=".$latitude.",".$longitude."&sensor=false&client=gme-elixiatechsolutions", 'JJV_YuyiXZ6YjiWZ2WA6kjkpPrk=');
	        $location = json_decode(file_get_contents("$API&sensor=false"));

	   		$area_name = $location->results[0]->formatted_address;

	        if (isset($location) && isset($area_name) && $area_name!= ""){
	        	$address = $area_name;
	        	return $address;
	        }
	        else{
	        	$address = "Unknown Location";
	        }
	    }
	    else{
	        return false;
	    }
	}

	if(isset($_POST['insert_prospectiveCust'])){
		global $tm;
 		$prospCustObj = new stdClass();
 		$prospCustObj->custName = $_POST['realname'];
 		$prospCustObj->compName = $_POST['company_name'];
 		$prospCustObj->address = $_POST['company_add'];
 		$prospCustObj->phone = $_POST['phone'];
 		$prospCustObj->email = $_POST['emailaddress'];
 		$prospCustObj->remarks = $_POST['remarks'];
  		$result = $tm->insertProspCustomer($prospCustObj);
		echo json_encode($result);
	}

	if (isset($_POST['fetch_prospCust'])) {
		global $tm;
		$prospId = isset($_POST['prospectId'])?$_POST['prospectId']:0;
  		$result = $tm->getProspCustomer($prospId);
		echo json_encode($result);
	}
	if (isset($_POST['update_prospCust'])) {
		global $tm;
		$prospCustObj = new stdClass();
		$prospCustObj->prospId = $_POST['prospectId'];
 		$prospCustObj->custName = $_POST['realname'];
 		$prospCustObj->compName = $_POST['company_name'];
 		$prospCustObj->address = $_POST['company_add'];
 		$prospCustObj->phone = $_POST['phone'];
 		$prospCustObj->email = $_POST['emailaddress'];
 		$prospCustObj->remarks = $_POST['remarks'];
  		$result = $tm->updateProspCustomer($prospCustObj);
		echo json_encode($result);
	}
	if (isset($_POST['delete_prospCust'])) {
		global $tm;
		$prospCustObj = new stdClass();
		$prospCustObj->prospId = $_POST['prospectId'];
  		$result = $tm->deleteProspCustomer($prospCustObj);
		echo json_encode($result);
	}

	if (isset($_REQUEST['get_customer'])) {
		global $tm;
		$arrResult=$tm->getCustomers($_REQUEST['term']);
		echo json_encode($arrResult);
	}

	if (isset($_POST['insert_jobOpening'])) {
		global $tm;
		$jobObj = new stdClass();
		$jobObj->location 		= isset($_POST['location'])? $_POST['location']:"";
		$jobObj->experience 	= isset($_POST['exp'])? $_POST['exp']:"";
		$jobObj->departement 	= isset($_POST['dept'])? $_POST['dept']:"";
		$jobObj->companyRole 	= isset($_POST['compRole'])? $_POST['compRole']:"";
		$jobObj->requirement 	= isset($_POST['requirement'])? $_POST['requirement']:"";
		$jobObj->preference 	= isset($_POST['pref'])? $_POST['pref']:"";
		$jobObj->challenges 	= isset($_POST['challenge'])? $_POST['challenge']:"";
		$jobObj->jobRole 		= isset($_POST['jobRole'])? $_POST['jobRole']:"";
  		$result 				= $tm->insertJobOpening($jobObj);
		echo json_encode($result);
	}

	if(isset($_POST['fetch_jobOpening'])){ 
		global $tm;
		$obj = new stdClass();
		$obj->careerId = isset($_POST['careerId'])? $_POST['careerId']:0;
    	$arrResult = $tm->fetchElixiaCarrers($obj);
    	echo json_encode($arrResult);
	}

	if(isset($_POST['fetch_jobOpeningDetails'])){ 
		global $tm;
		$obj = new stdClass();
		$obj->careerId = isset($_POST['careerId'])? $_POST['careerId']:0;
    	$arrResult = $tm->fetchElixiaCarrers($obj);
    	$arrResult = $arrResult[0];
    	$arrResult['requirement'] = html_entity_decode($arrResult['requirement'],ENT_QUOTES, 'UTF-8');
    	$arrResult['preference'] = html_entity_decode($arrResult['preference'],ENT_QUOTES, 'UTF-8');
    	$arrResult['challenges'] = html_entity_decode($arrResult['challenges'],ENT_QUOTES, 'UTF-8');
    	$arrResult['job_role'] = html_entity_decode($arrResult['job_role'],ENT_QUOTES, 'UTF-8');
    	echo json_encode($arrResult);
	}

	if (isset($_POST['update_jobOpening'])) {
		global $tm;
		$jobObj = new stdClass();
		$jobObj->location 		= isset($_POST['location'])? $_POST['location']:"";
		$jobObj->experience 	= isset($_POST['exp'])? $_POST['exp']:"";
		$jobObj->departement 	= isset($_POST['dept'])? $_POST['dept']:"";
		$jobObj->companyRole 	= isset($_POST['compRole'])? $_POST['compRole']:"";
		$jobObj->requirement 	= isset($_POST['requirement'])? $_POST['requirement']:"";
		$jobObj->preference 	= isset($_POST['pref'])? $_POST['pref']:"";
		$jobObj->challenges 	= isset($_POST['challenge'])? $_POST['challenge']:"";
		$jobObj->jobRole 		= isset($_POST['jobRole'])? $_POST['jobRole']:"";
		$jobObj->careerId 		= isset($_POST['careerId'])? $_POST['careerId']:"";
  		$result 				= $tm->updateJobOpening($jobObj);
		echo json_encode($result);
	}	

	if (isset($_POST['delete_jobOpening'])) {
		global $tm;
		$jobObj = new stdClass();
		$jobObj->careerId = $_POST['careerId'];
  		$result = $tm->deleteJobOpening($jobObj);
		echo json_encode($result);
	}

	if(isset($_POST['fetch_job_applications'])){ 
		global $tm;
		$obj = new stdClass();
    	$arrResult = $tm->fetchJobApplications();
    	
    	echo json_encode($arrResult);
	}
?>
